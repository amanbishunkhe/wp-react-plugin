{"version":3,"file":"index.js","mappings":"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","sources":["webpack://first-block/./assets/resource/admin/component/Panel.js","webpack://first-block/./assets/resource/admin/component/SettingPage.js","webpack://first-block/./assets/resource/admin/index.css","webpack://first-block/external window [\"wp\",\"components\"]","webpack://first-block/external window [\"wp\",\"coreData\"]","webpack://first-block/external window [\"wp\",\"data\"]","webpack://first-block/external window [\"wp\",\"element\"]","webpack://first-block/external window [\"wp\",\"i18n\"]","webpack://first-block/external window \"ReactJSXRuntime\"","webpack://first-block/webpack/bootstrap","webpack://first-block/webpack/runtime/compat get default export","webpack://first-block/webpack/runtime/define property getters","webpack://first-block/webpack/runtime/hasOwnProperty shorthand","webpack://first-block/webpack/runtime/make namespace object","webpack://first-block/./assets/resource/admin/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\r\nimport { Flex, FlexItem, TextControl } from '@wordpress/components';\r\n\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\nfunction Panel() {\r\n\t// Get the settings from the store.\r\n\tconst { record: settings, hasResolved } = useSelect( ( select ) => {\r\n\t\treturn {\r\n\t\t\trecord: select( coreStore ).getEditedEntityRecord( 'root', 'site' ),\r\n\t\t\thasResolved: select( coreStore ).hasFinishedResolution(\r\n\t\t\t\t'getEditedEntityRecord',\r\n\t\t\t\t[ 'root', 'site' ]\r\n\t\t\t),\r\n\t\t};\r\n\t} );\r\n\r\n\t// We'll use these functions to save the settings to the store.\r\n\tconst { editEntityRecord } = useDispatch( coreStore );\r\n\r\n\tif ( ! hasResolved ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// This will save settings the settings to the local state only.\r\n\tconst updateOptions = ( key, value ) => {\r\n\t\teditEntityRecord( 'root', 'site', undefined, {\r\n\t\t\twpdev_account_settings: {\r\n\t\t\t\t...settings.wpdev_account_settings,\r\n\t\t\t\t[ key ]: value,\r\n\t\t\t},\r\n\t\t} );\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tdirection=\"column\"\r\n\t\t\tgap=\"4\"\r\n\t\t\tclassName=\"example-wp-settings-field-group\"\r\n\t\t>\r\n\t\t\t<FlexItem>\r\n\t\t\t\t<TextControl\r\n\t\t\t\t\tlabel={ __( 'Account Number' ) }\r\n\t\t\t\t\tvalue={ settings.wpdev_account_settings?.account_number }\r\n\t\t\t\t\ttype={ 'text' }\r\n\t\t\t\t\tonChange={ ( value ) => {\r\n\t\t\t\t\t\tupdateOptions( 'account_number', value );\r\n\t\t\t\t\t} }\r\n\t\t\t\t/>\r\n\t\t\t</FlexItem>\r\n\t\t\t\r\n\t\t</Flex>\r\n\t);\r\n}\r\n\r\nexport default Panel;\r\n","import { __ } from '@wordpress/i18n';\r\nimport { useState, useEffect } from '@wordpress/element';\r\nimport {\r\n\tCard,\r\n\tCardBody,\r\n\tCardDivider,\r\n\tFlex,\r\n\tFlexItem,\r\n\tButton,\r\n\tSnackbar,\r\n\tTabPanel,\r\n} from '@wordpress/components';\r\n\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\nimport Panel from './Panel';\r\n\r\nfunction SettingsPage() {\r\n\t// Get the settings from the store.\r\n\tconst { record: settings, hasResolved } = useSelect( ( select ) => {\r\n\t\treturn {\r\n\t\t\trecord: select( coreStore ).getEditedEntityRecord( 'root', 'site' ),\r\n\t\t\thasResolved: select( coreStore ).hasFinishedResolution(\r\n\t\t\t\t'getEditedEntityRecord',\r\n\t\t\t\t[ 'root', 'site' ]\r\n\t\t\t),\r\n\t\t};\r\n\t} );\r\n\r\n\t// We'll use these functions to save the settings to the store.\r\n\tconst { saveEntityRecord } = useDispatch( coreStore );\r\n\r\n\t// State to show a success message when the settings are saved.\r\n\tconst [ success, setSuccess ] = useState( false );\r\n\r\n\t// State to keep track of which tab is active.\r\n\tconst [ activeTab, setActiveTab ] = useState( 'panel' );\r\n\r\n\t// If the settings haven't been loaded yet, we'll return null.\r\n\t// This needs to happen after all the hooks are called.\r\n\tif ( ! hasResolved ) {\r\n\t\treturn null;\r\n\t}\r\n\t// In the block editor, saving to the database happens automatically when you publish or update a post.\r\n\t// In the our settings page, you would need to add a separate button to save the settings.\r\n\tconst saveOptions = ( event ) => {\r\n\t\tevent.preventDefault();\r\n\t\tsaveEntityRecord( 'root', 'site', {\r\n\t\t\twpdev_account_settings: settings.wpdev_account_settings,\r\n\t\t} ).then( ( response ) => {\r\n\t\t\tsetSuccess( true );\r\n\t\t\tconsole.log( response,'saved in the database' );\r\n\t\t} );\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className=\"example-wp-settings\" onSubmit={ saveOptions }>\r\n\t\t\t<Card>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<h1>{ __( 'Example WP Settings Settings' ) }</h1>\r\n\t\t\t\t\t<TabPanel\r\n\t\t\t\t\t\tclassName=\"example-wp-settings-tab-panel\"\r\n\t\t\t\t\t\tonSelect={ ( tabName ) => {\r\n\t\t\t\t\t\t\tsetActiveTab( tabName );\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t\tinitialTabName={ activeTab }\r\n\t\t\t\t\t\ttabs={ [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tname: 'panel',\r\n\t\t\t\t\t\t\t\ttitle: 'Example Panel',\r\n\t\t\t\t\t\t\t\tcontent: <Panel />,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t] }\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ ( tab ) => <>{ tab.content }</> }\r\n\t\t\t\t\t</TabPanel>\r\n\t\t\t\t</CardBody>\r\n\t\t\t\t<CardDivider />\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Flex>\r\n\t\t\t\t\t\t<FlexItem>\r\n\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\tSave Changes\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</FlexItem>\r\n\t\t\t\t\t\t<FlexItem>\r\n\t\t\t\t\t\t\t{ success && (\r\n\t\t\t\t\t\t\t\t<Snackbar\r\n\t\t\t\t\t\t\t\t\tstatus={ 'success' }\r\n\t\t\t\t\t\t\t\t\tonDismiss={ function noRefCheck() {\r\n\t\t\t\t\t\t\t\t\t\tsetSuccess( false );\r\n\t\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t\t\t\tonRemove={ function noRefCheck() {} }\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSaved\r\n\t\t\t\t\t\t\t\t</Snackbar>\r\n\t\t\t\t\t\t\t) }\r\n\t\t\t\t\t\t</FlexItem>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default SettingsPage;\r\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createRoot } from '@wordpress/element';\nimport  SettingsPage  from './component/SettingPage';\nimport './index.css';\nlet root = createRoot( document.getElementById('root') );\nroot.render(\n   <SettingsPage />\n)"],"names":["__","Flex","FlexItem","TextControl","useDispatch","useSelect","store","coreStore","jsx","_jsx","Panel","record","settings","hasResolved","select","getEditedEntityRecord","hasFinishedResolution","editEntityRecord","updateOptions","key","value","undefined","wpdev_account_settings","direction","gap","className","children","label","account_number","type","onChange","useState","useEffect","Card","CardBody","CardDivider","Button","Snackbar","TabPanel","Fragment","_Fragment","jsxs","_jsxs","SettingsPage","saveEntityRecord","success","setSuccess","activeTab","setActiveTab","saveOptions","event","preventDefault","then","response","console","log","onSubmit","onSelect","tabName","initialTabName","tabs","name","title","content","tab","variant","status","onDismiss","noRefCheck","onRemove","createRoot","root","document","getElementById","render"],"sourceRoot":""}